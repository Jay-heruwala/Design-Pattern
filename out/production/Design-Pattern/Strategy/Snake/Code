// Step 1: Define the Strategy interface
interface PoisonStrategy {
    void handlePoison(Snake snake);
}

// Step 2: Create concrete strategies
class PoisonToUnpoisonStrategy implements PoisonStrategy {
    @Override
    public void handlePoison(Snake snake) {
        if (snake.isPoisonous()) {
            System.out.println("Converting poisonous snake to non-poisonous");
            snake.setPoisonous(false);
        } else {
            System.out.println("Snake is already non-poisonous");
        }
    }
}

class UnpoisonToPoisonStrategy implements PoisonStrategy {
    @Override
    public void handlePoison(Snake snake) {
        if (!snake.isPoisonous()) {
            System.out.println("Converting non-poisonous snake to poisonous");
            snake.setPoisonous(true);
        } else {
            System.out.println("Snake is already poisonous");
        }
    }
}

// Step 3: Create the context class
class Snake {
    private String species;
    private boolean isPoisonous;
    private PoisonStrategy poisonStrategy;

    public Snake(String species, boolean isPoisonous) {
        this.species = species;
        this.isPoisonous = isPoisonous;
    }

    public void setPoisonStrategy(PoisonStrategy poisonStrategy) {
        this.poisonStrategy = poisonStrategy;
    }

    public void executeStrategy() {
        if (poisonStrategy != null) {
            poisonStrategy.handlePoison(this);
        } else {
            System.out.println("No strategy set for handling poison state");
        }
    }

    public boolean isPoisonous() {
        return isPoisonous;
    }

    public void setPoisonous(boolean poisonous) {
        isPoisonous = poisonous;
    }

    public String getSpecies() {
        return species;
    }

    @Override
    public String toString() {
        return species + " (Poisonous: " + isPoisonous + ")";
    }
}

// Example of using the strategy pattern
public class SnakeApp {
    public static void main(String[] args) {
        // Create snakes
        Snake cobra = new Snake("Cobra", true);
        Snake pythonSnake = new Snake("Python", false);

        // Create strategies
        PoisonStrategy poisonToUnpoisonStrategy = new PoisonToUnpoisonStrategy();
        PoisonStrategy unpoisonToPoisonStrategy = new UnpoisonToPoisonStrategy();

        // Convert poisonous to non-poisonous
        System.out.println("Initial state: " + cobra);
        cobra.setPoisonStrategy(poisonToUnpoisonStrategy);
        cobra.executeStrategy();
        System.out.println("After strategy execution: " + cobra);

        // Convert non-poisonous to poisonous
        System.out.println("\nInitial state: " + pythonSnake);
        pythonSnake.setPoisonStrategy(unpoisonToPoisonStrategy);
        pythonSnake.executeStrategy();
        System.out.println("After strategy execution: " + pythonSnake);

        // Try to convert an already converted snake
        System.out.println("\nTrying to convert already converted snake:");
        cobra.executeStrategy();
        System.out.println("After strategy execution: " + cobra);
    }
}